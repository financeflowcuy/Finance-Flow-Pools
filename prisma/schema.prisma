// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
<<<<<<< HEAD
  phone     String?
  password  String
  balance   Int      @default(1000000)
  isActive  Boolean  @default(true)
  isAdmin   Boolean  @default(false)
=======
  balance   Int      @default(1000000)
>>>>>>> b54ed963e42b18f24b0debb1a41952154db626e5
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  bets      Bet[]
  winnings  Winning[]
<<<<<<< HEAD
  auditLogs AuditLog[]
  
  @@map("users")
=======
>>>>>>> b54ed963e42b18f24b0debb1a41952154db626e5
}

model LotteryDraw {
  id          String   @id @default(cuid())
  numbers     String   // JSON array of numbers
  betType     String   // "2D", "3D", or "4D"
  seed        String   // For provable fairness
  seedHash    String   // Hash of the seed
  signature   String   // Digital signature
  publicKey   String   // Public key for verification
  drawTime    DateTime @default(now())
  isCompleted Boolean  @default(false)
  createdAt   DateTime @default(now())
  
  bets        Bet[]
  winnings    Winning[]
<<<<<<< HEAD
  auditLogs   AuditLog[]
  
  @@map("lottery_draws")
=======
>>>>>>> b54ed963e42b18f24b0debb1a41952154db626e5
}

model Bet {
  id           String   @id @default(cuid())
  userId       String
  drawId       String?
  numbers      String   // JSON array of selected numbers
  betType      String   // "2D", "3D", or "4D"
  amount       Int
<<<<<<< HEAD
  status       String   @default("pending") // "pending", "won", "lost", "refunded"
=======
  status       String   @default("pending") // "pending", "won", "lost"
>>>>>>> b54ed963e42b18f24b0debb1a41952154db626e5
  encryptedData String? // JSON string with encrypted data, iv, and tag
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  
  user         User     @relation(fields: [userId], references: [id])
  draw         LotteryDraw? @relation(fields: [drawId], references: [id])
  winning      Winning?
<<<<<<< HEAD
  
  @@map("bets")
=======
>>>>>>> b54ed963e42b18f24b0debb1a41952154db626e5
}

model Winning {
  id       String   @id @default(cuid())
  betId    String   @unique
  userId   String
  drawId   String
  amount   Int
  numbers  String   // Winning numbers
  claimed  Boolean  @default(false)
  createdAt DateTime @default(now())
  
  bet      Bet      @relation(fields: [betId], references: [id])
  user     User     @relation(fields: [userId], references: [id])
  draw     LotteryDraw @relation(fields: [drawId], references: [id])
<<<<<<< HEAD
  
  @@map("winnings")
=======
>>>>>>> b54ed963e42b18f24b0debb1a41952154db626e5
}

model AuditLog {
  id        String   @id @default(cuid())
<<<<<<< HEAD
  action    String   // "bet_placed", "draw_completed", "winning_paid", "admin_login", "user_login"
  userId    String?
  drawId    String?
=======
  action    String   // "bet_placed", "draw_completed", "winning_paid"
  userId    String?
>>>>>>> b54ed963e42b18f24b0debb1a41952154db626e5
  data      String   // JSON data
  ipAddress String?
  userAgent String?
  createdAt DateTime @default(now())
<<<<<<< HEAD
  
  user      User?    @relation(fields: [userId], references: [id])
  draw      LotteryDraw? @relation(fields: [drawId], references: [id])
  
  @@map("audit_logs")
}

model SystemSettings {
  id          String   @id @default(cuid())
  key         String   @unique
  value       String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  @@map("system_settings")
}

model Announcement {
  id          String   @id @default(cuid())
  title       String
  content     String
  type        String   @default("info") // "info", "promotion", "warning", "maintenance"
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  @@map("announcements")
=======
>>>>>>> b54ed963e42b18f24b0debb1a41952154db626e5
}